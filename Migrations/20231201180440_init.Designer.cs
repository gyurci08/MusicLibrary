// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicLibrary.Models.Objects;

#nullable disable

namespace MusicLibrary.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231201180440_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MusicLibrary.Models.Objects.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            Name = "Edda Művek"
                        });
                });

            modelBuilder.Entity("MusicLibrary.Models.Objects.ArtistMusic", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("MusicId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "MusicId");

                    b.HasIndex("MusicId");

                    b.ToTable("ArtistMusics");
                });

            modelBuilder.Entity("MusicLibrary.Models.Objects.Music", b =>
                {
                    b.Property<int>("MusicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusicId"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("MusicId");

                    b.ToTable("Musics");

                    b.HasData(
                        new
                        {
                            MusicId = 1,
                            Title = "Éjjel érkezem",
                            Year = 1986
                        });
                });

            modelBuilder.Entity("MusicLibrary.Models.Objects.ArtistMusic", b =>
                {
                    b.HasOne("MusicLibrary.Models.Objects.Artist", null)
                        .WithMany("ArtistMusics")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicLibrary.Models.Objects.Music", null)
                        .WithMany("ArtistMusics")
                        .HasForeignKey("MusicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MusicLibrary.Models.Objects.Artist", b =>
                {
                    b.Navigation("ArtistMusics");
                });

            modelBuilder.Entity("MusicLibrary.Models.Objects.Music", b =>
                {
                    b.Navigation("ArtistMusics");
                });
#pragma warning restore 612, 618
        }
    }
}
